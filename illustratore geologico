<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Illustratore Geologico</title>
    <!-- Carica Tailwind CSS per uno stile moderno e reattivo -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f0f4f8;
            color: #334155;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 1rem;
        }

        /* Stile per l'area di output dell'immagine */
        #output-container {
            min-height: 300px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            background-color: #cbd5e1;
            border-radius: 1rem;
            overflow: hidden;
            box-shadow: inset 0 2px 4px rgba(0,0,0,0.1);
            position: relative;
        }

        #geological-image {
            max-width: 100%;
            max-height: 100%;
            border-radius: 1rem;
            transition: opacity 0.5s ease-in-out;
        }

        /* Stile per il caricamento */
        .loader {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #3b82f6;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Stile per la barra di progresso */
        #progress-bar {
            width: 0%;
            height: 8px;
            background-color: #10b981;
            transition: width 0.5s ease-in-out;
        }
    </style>
</head>
<body class="bg-gray-100 text-gray-800 p-4 sm:p-8">

    <div class="w-full max-w-3xl bg-white rounded-2xl shadow-xl p-6 sm:p-8">
        <h1 class="text-3xl sm:text-4xl font-extrabold text-center mb-6 text-gray-900">Illustratore Geologico</h1>
        <p class="text-center text-gray-600 mb-8">
            Inserisci una descrizione dettagliata di una successione geologica per generare un'immagine.
        </p>

        <!-- Area di input per la descrizione -->
        <div class="mb-6">
            <textarea id="description-input" class="w-full p-4 border border-gray-300 rounded-lg shadow-inner focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors duration-200" rows="5" placeholder="Esempio: Una successione geologica verticale che inizia con uno strato di basalto, seguito da calcare con fossili di ammoniti, e termina con uno strato superiore di arenaria di colore chiaro."></textarea>
        </div>

        <!-- Pulsante per generare l'immagine -->
        <div class="text-center mb-8">
            <button id="generate-button" class="w-full sm:w-auto px-8 py-4 bg-blue-600 text-white font-bold rounded-full shadow-lg hover:bg-blue-700 transition-colors duration-200 transform hover:scale-105">
                Genera Illustrazione
            </button>
        </div>

        <!-- Area di output per l'immagine e lo stato -->
        <div>
            <h2 class="text-2xl font-semibold mb-4 text-gray-900">Risultato:</h2>
            <div id="output-container" class="w-full rounded-xl p-4 shadow-inner">
                <span id="placeholder-text" class="text-gray-500 italic">L'illustrazione apparirà qui.</span>
                <div id="loading-spinner" class="hidden loader mb-2"></div>
                <div id="status-message" class="text-center text-gray-600 mb-2"></div>
                <img id="geological-image" src="" alt="Illustrazione geologica" class="hidden">
            </div>
            
            <!-- Pulsante per scaricare l'immagine -->
            <div id="download-container" class="text-center mt-4 hidden">
                <button id="download-button" class="px-8 py-3 bg-green-500 text-white font-bold rounded-full shadow-lg hover:bg-green-600 transition-colors duration-200 transform hover:scale-105">
                    Scarica Immagine (JPG)
                </button>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const generateButton = document.getElementById('generate-button');
            const downloadButton = document.getElementById('download-button');
            const descriptionInput = document.getElementById('description-input');
            const placeholderText = document.getElementById('placeholder-text');
            const loadingSpinner = document.getElementById('loading-spinner');
            const geologicalImage = document.getElementById('geological-image');
            const statusMessage = document.getElementById('status-message');
            const downloadContainer = document.getElementById('download-container');

            // Funzione per aggiornare l'interfaccia utente con lo stato corrente
            function updateStatus(state, message = '') {
                placeholderText.classList.add('hidden');
                loadingSpinner.classList.add('hidden');
                geologicalImage.classList.add('hidden');
                statusMessage.textContent = '';
                downloadContainer.classList.add('hidden');
                
                if (state === 'loading') {
                    loadingSpinner.classList.remove('hidden');
                    statusMessage.textContent = message || 'Generazione in corso...';
                } else if (state === 'success') {
                    geologicalImage.classList.remove('hidden');
                    statusMessage.textContent = message || 'Immagine generata con successo!';
                    downloadContainer.classList.remove('hidden');
                } else if (state === 'error') {
                    placeholderText.textContent = message || 'Si è verificato un errore. Impossibile generare l\'immagine.';
                    placeholderText.classList.remove('hidden');
                } else if (state === 'idle') {
                    placeholderText.textContent = message || 'L\'illustrazione apparirà qui.';
                    placeholderText.classList.remove('hidden');
                }
            }

            // Funzione per generare un'illustrazione geologica tramite API
            async function generateImage(description) {
                updateStatus('loading');

                const prompt = `Create a detailed, accurate geological cross-section illustration based on the following description. The drawing should show the vertical succession of rock layers, including their types, characteristics, and any geological features like unconformities. The style should be that of a scientific diagram. Description: "${description}"`;

                const payload = {
                    instances: [{ prompt: prompt }],
                    parameters: { "sampleCount": 1 }
                };

                const apiKey = "";
                const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/imagen-3.0-generate-002:predict?key=${apiKey}`;

                let retryCount = 0;
                const maxRetries = 3;
                const baseDelay = 1000;

                while (retryCount < maxRetries) {
                    try {
                        const response = await fetch(apiUrl, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify(payload)
                        });

                        if (!response.ok) {
                            throw new Error(`Errore HTTP: ${response.status}`);
                        }

                        const result = await response.json();
                        if (result.predictions && result.predictions.length > 0 && result.predictions[0].bytesBase64Encoded) {
                            const base64Data = result.predictions[0].bytesBase64Encoded;
                            const imageUrl = `data:image/jpeg;base64,${base64Data}`; // Cambio a JPEG
                            geologicalImage.src = imageUrl;
                            updateStatus('success');
                            return;
                        } else {
                            updateStatus('error', "Nessuna immagine generata. Prova a riformulare la descrizione.");
                            return;
                        }

                    } catch (error) {
                        console.error('Errore durante la chiamata API:', error);
                        retryCount++;
                        if (retryCount < maxRetries) {
                            const delay = baseDelay * Math.pow(2, retryCount);
                            await new Promise(resolve => setTimeout(resolve, delay));
                        }
                    }
                }

                updateStatus('error', 'Si è verificato un errore dopo vari tentativi. Riprova più tardi.');
            }

            generateButton.addEventListener('click', () => {
                const description = descriptionInput.value.trim();
                if (description === "") {
                    updateStatus('idle', "Per favore, inserisci una descrizione valida.");
                    return;
                }
                generateImage(description);
            });

            downloadButton.addEventListener('click', () => {
                const imageUrl = geologicalImage.src;
                if (imageUrl && !imageUrl.includes("placeholder")) {
                    const link = document.createElement('a');
                    link.href = imageUrl;
                    link.download = 'illustrazione_geologica.jpg';
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);
                }
            });
        });
    </script>
</body>
</html>
